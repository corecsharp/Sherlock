{
  "$schema": "http://json-schema.org/draft-04/schema",
  "title": "模块清单文件架构定义",

  "definitions": {
    "dapper-section": {
      "type": "object",
      "properties": {
        "IdentifierMappingStrategy": {
          "type": "string",
          "enum": [ "Underline", "PascalCase" ],
          "description": "表名映射策略"
        }
      }
    },
    "data-section": {
      "type": "object",
      "properties": {
        "DefaultConnectionName": {
          "type": "string",
          "description": "默认的数据库字符串名称。"
        },
        "ConnectionStrings": {
          "type": "object",
          "additionalProperties": { "type": "string" },
          "minItems": 1,
          "uniqueItems": true,
          "description": "表示多个数据库链接字符串的字典。"
        },
        "Dapper": { "$ref": "#/definitions/dapper-section" }
      },
      "required": [ "ConnectionStrings" ]
    },
    "redis-section": {
      "type": "object",
      "properties": {
        "ConnectionString": {
          "type": "string",
          "description": "Redis 连接字符串。"
        },
        "GZipCompress": {
          "type": "boolean"
        },
        "SerializerName": {
          "type": "string",
          "enum": [ "sf.jnt" ]
        },
        "ReconnectFrequencySeconds": {
          "type": "integer",
          "minimum": 2,
          "exclusiveMinimum": false,
          "description": "断线重连进行尝试的频率（秒）。"
        },
        "RetryCount": {
          "type": "integer",
          "minimum": 0,
          "exclusiveMinimum": false,
          "description": "操作发生错误进行尝试的次数。"
        },
        "RetryDelayMilliseconds": {
          "type": "integer",
          "minimum": 500,
          "exclusiveMinimum": false,
          "description": "操作发生错误进行尝试的频率（毫秒）。"
        }
      },
      "required": [ "ConnectionString" ]
    },
    "network-section": {
      "type": "object",
      "properties": {
        "DataCenterId": {
          "type": "integer",
          "minimum": 1,
          "maximum": 17,
          "exclusiveMaximum": false,
          "exclusiveMinimum": false
        },
        "Lans": {
          "type": "array",
          "minItems": 1,
          "items": {
            "properties": {
              "DataCenterId": {
                "type": "integer",
                "minimum": 1,
                "maximum": 17,
                "exclusiveMaximum": false,
                "exclusiveMinimum": false
              },
              "LAN1IPMask": {
                "type": "string",
                "description": "第一个网段的IP掩码（例如：192.168.1.*）"
              },
              "LAN2IPMask": {
                "type": "string",
                "description": "第二个网段的IP掩码（例如：192.168.1.*）"
              },
              "LAN3IPMask": {
                "type": "string",
                "description": "第三个网段的IP掩码（例如：192.168.1.*）"
              },
              "LAN4IPMask": {
                "type": "string",
                "description": "第四个网段的IP掩码（例如：192.168.1.*）"
              }
            },
            "required": [ "DataCenterId" ]
          }
        }
      }
    },
    "scheduling-section": {
      "type": "object",
      "properties": {
        "EnableJobExecutionTracing": {
          "type": "boolean",
          "description": "是否启用作业执行追踪，如果为 true 将对作业执行情况记录日志。"
        },
        "Jobs": {
          "type": "object",
          "additionalProperties": { "type": "string" },
          "minimum": 0,
          "description": "标识作业的执行计划配置（字典）"
        }
      }
    },
    "eyes-section": {
      "type": "object",
      "properties": {
        "Logging": {
          "type": "object",
          "properties": {
            "Serializer": {
              "type": "string",
              "description": "日志程序使用的序列化器。",
              "enum": [ "protobuf", "json" ]
            },
            "Topic": {
              "type": "string",
              "description": "表示日志分发的选项。"
            },
            "ConsumeConcurrencyLevel": {
              "type": "number",
              "description": "表示日志推送的并发度。"
            },
            "QueryServiceAddress": {
              "type": "string",
              "description": "日志查询服务的地址（包含端口号，如：192.168.1.10:3333）。"
            },
            "QueueMaxSizeKBytes": {
              "type": "integer",
              "description": "本地缓存队列的大小（单位：字节）。"
            },
            "QueueMaxCount": {
              "type": "integer",
              "description": "本地缓存队列允许的消息数量限制。"
            }
          }
        },
        "Kafka": {
          "type": "object",
          "default": "表示日志收集服务使用的 Kafka 配置。",
          "properties": {
            "KafkaServers": {
              "type": "string",
              "description": "表示 Kafka 集群的服务器地址（格式 192.168.0.3:2181,192.168.0.4:2181）"
            },
            "MessageMaxSizeBytes": {
              "type": "integer",
              "description": "消息的大小限制（单位：字节）。"
            },
            "MessageBufferSizeBytes": {
              "type": "integer",
              "description": "收发消息使用的本地缓冲区大小（单位：字节）。"
            },
            "SessionTimeoutMilliseconds": {
              "type": "integer",
              "description": "Kafka session 超时时间（单位：毫秒）。"
            },
            "SocketTimeoutMilliseconds": {
              "type": "integer",
              "description": "网络请求超时时间（单位：毫秒）。"
            },
            "SocketKeepAlive": {
              "type": "boolean",
              "description": "是否对每个 Broker 连接启用 TCP KEEPALIVE（SO_KEEPALIVE）。"
            }
          },
          "required": [ "KafkaServers" ]
        }
      },
      "required": [ "Logging", "Kafka" ]
    },
    "configuration-section": {
      "type": "object",
      "properties": {
        "ConnectionString": {
          "type": "string",
          "description": "Zookeeper 链接字符串，多个主机地址以 , 分割"
        },
        "ConnectionTimeoutSeconds": {
          "type": "integer",
          "description": "服务器连接的时间（单位：秒）"
        },
        "OperatingTimeoutSeconds": {
          "type": "integer",
          "description": "操作的时间（单位：秒）"
        },
        "SessionTimeoutSeconds": {
          "type": "integer",
          "description": "会话超时时间（单位：秒）"
        }
      }
    },
    "eureka-scetion": {
      "description": "注册中心的配置",
      "type": "object",
      "required": [ "EurekaServerServiceUrls" ],
      "properties": {
        "AddressUsage": {
          "type": "string",
          "enum": [ "IPAddress", "HostName" ],
          "description": "使用远程服务的地址的方式,IPAddress(使用IP地址),HostName(使用主机名)"
        },
        "ShouldOnDemandUpdateStatusChange": {
          "type": "boolean",
          "description": "客户端的状态更新,是否更新到远程服务器,默认为true"
        },
        "RegistryRefreshSingleVipAddress": {
          "type": "string",
          "description": "仅仅刷新一个虚拟IP地址,如果你的客户端只使用这一个虚拟IP的话,应该是可以这样做的,默认为null"
        },
        "ShouldFetchRegistry": {
          "type": "boolean",
          "description": "当前客户端是否从注册中心获取注册中心全部注册服务器的信息,默认为true"
        },
        "ShouldFilterOnlyUpInstances": {
          "type": "boolean",
          "description": "是否仅仅获取注册中心中标记为上线状态的服务器,默认为true"
        },
        "ShouldDisableDelta": {
          "type": "boolean",
          "description": "是否提供增量信息,默认为false"
        },
        "AllowRedirects": {
          "type": "boolean",
          "description": "允许重定向,默认为false"
        },
        "ShouldRegisterWithEureka": {
          "type": "boolean",
          "description": "是否注册当前客户端到注册中心以供其他服务器使用,默认为true"
        },
        "ProxyUserName": {
          "type": "string",
          "description": "代理服务器的用户名"
        },
        "ProxyPassword": {
          "type": "string",
          "description": "代理服务器的密码"
        },
        "ProxyHost": {
          "type": "string",
          "description": "代理服务器的地址"
        },
        "ProxyPort": {
          "type": "integer",
          "description": "代理服务器的端口"
        },
        "ShouldGZipContent": {
          "type": "boolean",
          "description": "从注册中心获取到内容是否使用了gzip压缩,默认为true"
        },
        "EurekaServerServiceUrls": {
          "type": "string",
          "description": "注册中心的地址,类似于http://(IP地址|域名)[:端口]/eureka/"
        },
        "InstanceInfoReplicationIntervalSeconds": {
          "type": "integer",
          "description": "复制实例变化信息到注册中心的时间间隔,单位秒,默认40秒"
        },
        "RegistryFetchIntervalSeconds": {
          "type": "integer",
          "description": "从注册中心拉取实例信息的时间间隔,单位秒,默认30秒"
        },
        "EurekaServerConnectTimeoutSeconds": {
          "type": "integer",
          "description": "连接到注册中心的超时时间,单位秒,默认5秒"
        },
        "ValidateCertificates": {
          "type": "boolean",
          "description": "验证注册中心的https证书"
        }
      }
    },
    "chopinpool-section": {
      "type": "object",
      "properties": {
        "MaxTotalPerKey": {
          "type": "integer",
          "description": "默认每个key对应的最大总实例数,默认8"
        },
        "MinIdlePerKey": {
          "type": "integer",
          "description": "默认每个key对应的最小空闲实例数,默认0"
        },
        "MaxIdlePerKey": {
          "type": "integer",
          "description": "默认每个key对应的最大空闲实例数,默认8"
        },
        "DefaultBlockWhenExhausted": {
          "type": "boolean",
          "description": "默认实例耗尽的时候默认是否阻塞,默认true"
        },
        "DefaultMaxWaitMillis": {
          "type": "integer",
          "description": "默认获取实例时最长等待时间,默认-1,表示无限等,单位毫秒"
        },
        "MaxTotal": {
          "type": "integer",
          "description": "总实例数"
        },
        "BorrowStrategy": {
          "type": "string",
          "enum": [ "LIFO", "FIFO", "Random" ],
          "description": "获取对象的策略,LIFO(后进先出),FIFO(先进先出),Random(随机搞)"
        },
        "MaxWaitMillis": {
          "type": "integer",
          "description": "获取实例时最长等待时间,单位毫秒"
        },
        "MinEvictableIdleTimeMillis": {
          "type": "integer",
          "description": "最小后台检查器空闲时间(毫秒)"
        },
        "SoftMinEvictableIdleTimeMillis": {
          "type": "integer",
          "description": "如果存在可用的MinIdle实例，则对象在池中被驱逐前的最短是空闲时间"
        },
        "NumTestsPerEvictionRun": {
          "type": "integer",
          "description": "每次后台检查器运行锁检查的最大对象数量"
        },
        "TestOnCreate": {
          "type": "boolean",
          "description": "是否在创建对象时进行检查验证"
        },
        "TestOnBorrow": {
          "type": "boolean",
          "description": "是否在每次借用对象时进行检查验证"
        },
        "TestOnReturn": {
          "type": "boolean",
          "description": "是否在还回对象时进行检查验证"
        },
        "TestWhileIdle": {
          "type": "boolean",
          "description": "是否在空闲时进行检查验证"
        },
        "TimeBetweenEvictionRunsMillis": {
          "type": "integer",
          "description": "后台检查间隔时间（毫秒）"
        },
        "EvictionPolicyClassName": {
          "type": "string",
          "description": "后台检查策略类名"
        },
        "BlockWhenExhausted": {
          "type": "boolean",
          "description": "池中对象用尽时是否阻塞"
        }
      }
    },
    "swifty-section": {
      "type": "object",
      "properties": {
        "EnableFeatures": {
          "type": "string",
          "enum": [ "Server", "Client", "Both" ],
          "description": "指示 Swifty 功能"
        },
        "Client": {
          "type": "object",
          "properties": {
            "ExploringAssemblies": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "获取或设置客户端扫描的程序集，即远程服务的接口所在的程序集"
            },
            "DirectAddress": {
              "type": "object",
              "minItems": 0,
              "uniqueItems": true,
              "description": " 获取或设置直连的（不通过注册中心客户端负载均衡连接，而是直接连接到服务端所在服务器）服务配置"
            },
            "ClientName": {
              "type": "string"
            },
            "ConfigNamespace": {
              "type": "string"
            },
            "ConnectTimeoutMilliseconds": {
              "type": "integer",
              "description": "连接超时时间,单位毫秒,默认2000"
            },
            "ReceiveTimeoutMilliseconds": {
              "type": "integer",
              "description": "接收超时时间,单位毫秒,默认60000"
            },
            "ReadTimeoutMilliseconds": {
              "type": "integer",
              "description": "读超时时间,单位毫秒,默认60000"
            },
            "WriteTimeoutMilliseconds": {
              "type": "integer",
              "description": "写超时时间,单位毫秒,默认30000"
            },
            "RetriesSameServer": {
              "type": "integer",
              "description": "在当前服务器失败的情况下的重试次数,默认1"
            },
            "RetriesNextServer": {
              "type": "integer",
              "description": "在当前服务器失败的情况下的尝试使用下一个服务器的次数,默认5"
            },
            "RetryEnabled": {
              "type": "boolean",
              "description": "是否启用重试机制"
            },
            "MaxFrameSize": {
              "type": "integer",
              "description": "分帧传输单帧大小,超过这个会变成两次请求,默认16777216,16M"
            },
            "Proxy": {
              "type": "string",
              "description": "Socket代理"
            },
            "ConnectionPoolEnabled": {
              "type": "boolean",
              "description": "是否启用连接池,默认启用"
            },
            "ConnectinPool": {
              "$ref": "#/definitions/chopinpool-section"
            },
            "Eureka": {
              "$ref": "#/definitions/eureka-scetion"
            }
          }
        },
        "Server": {
          "type": "object",
          "required": [ "Eureka", "PublicAddress", "Port" ],
          "properties": {
            "PublicAddress": {
              "type": "string",
              "description": "获取或设置当使用配置中心注册服时当前实例公开的地址（ip 地址、主机名）"
            },
            "MaxFrameSizeBytes": {
              "type": "integer",
              "description": "单帧最大字节数"
            },
            "Port": {
              "type": "integer",
              "description": "服务器要绑定的端口"
            },
            "BindingAddress": {
              "type": "string",
              "description": "获取服务器绑定的网络地址（机器名或 IP地址），为空表示 IPAddress.Any"
            },
            "AcceptorThreadCount": {
              "type": "integer",
              "description": "获取或设置 Netty BOSS 线程池的线程数"
            },
            "AcceptBacklog": {
              "type": "integer",
              "description": "TCP accept Backlog 参数, 默认为 1024"
            },
            "IOThreadCount": {
              "type": "integer",
              "description": "获取或设置 IO 线程组（Netty Wroker Group）的线程数"
            },
            "WorkerThreadCount": {
              "type": "integer",
              "description": "获取或设置工作线程组（Wrok Group）的线程数（默认为CPU核心数 * 2）"
            },
            "IdleConnectionTimeout": {
              "type": "integer",
              "description": "获取或设置服务器空闲超时时间，默认为 1 分钟"
            },
            "QueueTimeout": {
              "type": "integer",
              "description": "服务器接受请求后和服务器从请求队列中拉取请求进行处理之间的超时时间。 如果超过该时间，服务器自动关闭客户端连接。该值通常在服务器繁忙时候可以阻止大量的客户端排队，默认为 5 秒"
            },
            "TaskExpirationTimeout": {
              "type": "integer",
              "description": "服务器收到客户端请求到请求处理完成之间的超时时间，默认为 5 秒。如果在请求到达队列前面并开始处理之前超时过期,服务器将丢弃请求而不是处理它。如果请求已开始处理, 服务器将立即发送错误, 并丢弃请求处理的结果。"
            },
            "ConnectionLimit": {
              "type": "integer",
              "description": "获取或设置服务器链接数限制，默认不限，即 null"
            },
            "ProtocolName": {
              "type": "string",
              "description": "获取或设置 Thrift （序列化）协议，默认为 binary"
            },
            "TransportName": {
              "type": "string",
              "description": "获取或设置传输协议，默认为 framed"
            },
            "MaxQueuedResponsesPerConnection": {
              "type": "integer",
              "description": "获取或设置连接前每个连接可能累积的最大响应数，开始阻塞读取（以避免生成无限的排队响应）。每当服务端处理的请求和超出响应顺序时, 服务端就会限制响应直到预期序号的请求到来，默认为 16。"
            },
            "Eureka": {
              "$ref": "#/definitions/eureka-scetion"
            }
          }
        }
      }
    },
    "docker-section": {
      "type": "object",
      "description": "docker swarm 环境配置",
      "properties": {
        "DataCenterId": {
          "type": "number",
          "maximum": 17,
          "minimum": 1,
          "description": "数据中心或应用群划分，用于 snowflake 算法"
        },
        "ServiceName": {
          "type": "string",
          "description": "表示 docker swarm 使用的服务名称，非必须，默认使用 Group.AppSystemName"
        },
        "Manager": {
          "type": "string",
          "properties": {
            "Servers": {
              "type": "string",
              "description": "表示 docker swarm 管理节点的地址（ip:port），支持多个，使用 , 分割。"
            },
            "CertFile": {
              "type": "string",
              "description": "表示管理节点开放 API 的 TSL 证书文件。"
            },
            "CertPassword": {
              "type": "string",
              "description": "表示管理节点开放 API 的 TSL 证书的密码。"
            }
          },
          "required": [ "Host", "Port" ]
        }
      },
      "required": [ "DataCenterId", "Manager" ]
    },
    "event-rabbit-section": {
      "type": "object",
      "properties": {
        "Servers": {
          "type": "string",
          "description": "MQ 服务器的地址列表。"
        },
        "MessageTtl": {
          "type": "integer",
          "description": "消息消息生命时间（单位秒）"
        },
        "UserName": {
          "type": "string",
          "description": "连接 RabbitMQ 的用户名"
        },
        "Password": {
          "type": "string",
          "description": "连接 RabbitMQ 的用户密码"
        },
        "QueueName": {
          "type": "string",
          "description": "RabbitMQ 的队列名"
        },
        "ExchangeName": {
          "type": "string",
          "description": "RabbitMQ 使用的 Exchange 名称"
        },
        "RoutingKey": {
          "type": "string",
          "description": "RabbitMQ 的路由键"
        }
      },
      "required": ["Servers", "UserName", "Password"]
    }
  },

  "type": "object",
  "properties": {
    "Schubert": {
      "type": "object",
      "description": "框架约定配置",
      "properties": {
        "Group": {
          "type": "string",
          "description": "应用程序所属的组织名称或项目名称。"
        },
        "AppSystemName": {
          "type": "string",
          "description": "应用程序系统名称。"
        },
        "AppName": {
          "type": "string",
          "description": "应用程序显示名称。"
        },
        "Version": {
          "type": "string",
          "description": "应用程序版本（格式：1.0.1）。"
        },
        "DefaultCulture": {
          "type": "string",
          "default": "zh-Hans",
          "description": "应用程序使用的语言文化（例如：zh-Hans, zh-Hant，RFC 5646 标准）。"
        },
        "DefaultTimeZone": {
          "type": "string",
          "default": "China Standard Time",
          "description": "应用程序默认的时区，符合 开发语言（如.Net） 标准的时区名称。"
        },
        "Data": { "$ref": "#/definitions/data-section" },
        "Network": { "$ref": "#/definitions/network-section" },
        "Swifty": { "$ref": "#/definitions/swifty-section" },
        "Redis": { "$ref": "#/definitions/redis-section" },
        "Scheduling": { "$ref": "#/definitions/scheduling-section" },
        "Events": { "$ref": "#/definitions/event-rabbit-section" },
        "Cloud": {
          "type": "object",
          "properties": {
            "Eyes": { "$ref": "#/definitions/eyes-section" },
            "Configuration": { "$ref": "#/definitions/configuration-section" },
            "Docker": { "$ref": "#/definitions/docker-section" }
          }
        }
      },
      "required": [ "Group", "AppSystemName", "AppName", "Version" ]
    }
  },
  "required": [ "name", "author", "description", "version" ]
}
